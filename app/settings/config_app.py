from pathlib import Path
from datetime import datetime

import pytz
from pydantic import Field
from pydantic_settings import BaseSettings


class Settings(BaseSettings):
    # –ë–ï–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø üî¥
    APP_NAME: str = "victory_group"
    APP_VERSION: str = "0.1.0"
    BASE_DIR: Path = Path(__file__).resolve().parent.parent.parent
    TIME_MOSCOW_NOW: datetime = datetime.now(pytz.timezone('Europe/Moscow'))

    # –° –ü–ï–†–ï–ú–ï–ù–ù–´–ú–ò –û–ö–†–£–ñ–ï–ù–ò–Ø ‚úÖ
    APP_SECRET_KEY: str = Field("asd123")
    APP_HOST: str = Field("localhost")
    APP_PORT: int = Field(8000)
    DEBUG: bool = Field(True, description="–í–∫–ª—é—á–∞–µ—Ç —Ç–∞–∫–∂–µ –≤—ã–≤–æ–¥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    SQLALCHEMY_ECHO: bool = Field(False, description="–í–∫–ª—é—á–∞–µ—Ç –≤—ã–≤–æ–¥ sqlalchemy echo")
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ JWT —Ç–æ–∫–µ–Ω–∞
    JWT_SECRET_KEY: str = Field("qwe123")
    JWT_ALGORITHM: str = Field("HS256")
    ACCESS_TOKEN_EXPIRE_MINUTES: int = Field(120)
    REFRESH_TOKEN_EXPIRE_MINUTES: int = Field(1440)
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ POSTGRES DB
    PG_URL: str = Field("postgresql+asyncpg://qwe123:qwe123@localhost:5432/postgres")
    PG_POOL: int = Field(
        50, description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"
    )
    PG_POOL_TIMEOUT: int = Field(30, description="–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ REDIS DB
    REDIS_URL: str = Field("redis://localhost:6379")
    REDIS_POOL: int = Field(
        20, description="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π"
    )
    REDIS_POOL_TIMEOUT: int = Field(30, description="–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")

    class Config:
        env_file = ".env"
        env_file_encoding = 'utf-8'


settings = Settings()
